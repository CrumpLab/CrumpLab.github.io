---
title: "A reading list for cognition"
description: "Developing a reading list for cognitive psychology to supplement an introductory textbook."
author: "Matt Crump"
date: '2022-10-25'
date-modified: last-modified
image: 'images/cognition_reading.jpg'
opengraph:
  twitter:
    card: summary_large_image
    creator: "@MattCrumpLab"
    site: "@MattCrumpLab"
bibliography: [memory_timeline.bib,C1_Cognition_reading.bib]
categories:
  - cognition
  - teaching
  - reading list
---

```{r}
#| echo: FALSE
#| out.width: 100%
knitr::include_graphics('images/cognition_reading.jpg')
```

One of my ongoing projects is an [open-educational resource for a survey course in cognitive psychology](https://crumplab.com/cognition). The project currently includes a textbook, course website, slides, and assignment suggestions under a creative commons license (CC-BY-SA 4.0). The textbook has nine chapters, and at some point I plan to add a few more. As it stands, when I teach this course, we transition from textbook readings toward reading primary research articles. To supplement and encourage more reading of primary research, I'm considering adding a suggested reading list section to the textbook. The purpose of this blog post is to draft some reading lists, and think about how I would curate and present them.

I think I have two general problems to solve:

1.  Picking articles to go on the list (and considering why these/not those).
2.  Maintaining and publishing the list with preferred software tools, like zotero and quarto.

Ideally, I think I want a zotero folder with sub-folders for different topics in cognition, each full of recommended papers to read. I already use zotero, and it can generate .bib files for each folder, which I can pipe into quarto and print out somewhere. There's wrinkles though.

Let me count the ways. Let's say I have 10-25 recommended articles per chapter. I could put them all in a single .bib file, and then use \[nocite\](https://quarto.org/docs/authoring/footnotes-and-citations.html#including-uncited-items) to print them all to a reference list at the end of a chapter. This will be a long undifferentiated reference list in alphabetical order. I could probably sort it differently with CSL.

I remembered that I already started an "additional reading" section in the Eugenics and Psychology chapter. I don't like how it is presently formatted on the page, but I do like that it appears as a section in the chapter. Hmmm.

Revisiting that chapter I see that I tried two things. First, I wrote a code chunk to automatically generate a reading list from selected .bib entries in a .bib file. But, I guess I didn't like how that worked out, because I ended up typing out the references directly.

Here's a version of the code chunk:

```{r}
#| eval: TRUE
#| results: "asis"
#| messages: FALSE
#| warning: FALSE

library(dplyr)
load_bib <- bib2df::bib2df(file="memory_timeline.bib")

selected_bib <- load_bib %>%
  filter(BIBTEXKEY %in% c(
    "atkinsonHumanMemoryProposed1968",
    "baddeleyWorkingMemory1974",
    "craikLevelsProcessingFramework1972"))

bib2df::df2bib(selected_bib,file = "temp.bib")

stevemisc::print_refs("temp.bib",csl="apa-annotated-bibliography.csl")
```

This is OK. What are some other options.

## Cite the refs in text.

I guess the simplest option is to cite the references in text the normal way.

### Additional Reading

[@eichCompositeHolographicAssociative1982; @hintzmanJudgmentsFrequencyRecognition1988; @hintzmanMINERVASimulationModel1984a; @hintzmanSchemaAbstractionMultipleTrace1986; @jacobyNonanalyticCognitionMemory1984; @jacobyProcessDissociationFramework1991; @jamiesonInstanceTheorySemantic2018; @kolersProceduresMind1984; @macleodZeigarnikRestorffMemory2020; @mcclellandDistributedMemoryRepresentation1985; @murdockTheoryStorageRetrieval1982; @roedigerCreatingFalseMemories1995; @roedigeriiiTestenhancedLearningTaking2006; @shiffrinModelRecognitionMemory1997; @vossLongtermAssociativeMemory2009; @whittleseaProductionEvaluationPreservation1997].

This option isn't great. It's nice that quarto shows the full citation on hover, but in this case it shows a really long list because they are cited together within \[\].

## Additional Reading #2

@eichCompositeHolographicAssociative1982

@hintzmanJudgmentsFrequencyRecognition1988

@hintzmanMINERVASimulationModel1984a

@hintzmanSchemaAbstractionMultipleTrace1986

@jacobyNonanalyticCognitionMemory1984

Can't say I really love this look and feel either. Maybe a table or something would be better?

## Additional Reading #3

| Citation                                   | Year | Notes          |
|--------------------------------------------|------|----------------|
| @eichCompositeHolographicAssociative1982   | 1982 | blah blah blah |
| @hintzmanJudgmentsFrequencyRecognition1988 | 1988 | blah blah      |
| @shiffrinModelRecognitionMemory1997        | 1997 | blah blah      |

This isn't terrible. Could I make my life easier with `knitr::kable`?

## Additional Reading #4

```{r}
#| messages: FALSE
#| warning: FALSE
library(dplyr)
load_bib <- bib2df::bib2df(file="memory_timeline.bib")

selected_bib <- load_bib %>%
  filter(BIBTEXKEY %in% c(
    "atkinsonHumanMemoryProposed1968",
    "baddeleyWorkingMemory1974",
    "craikLevelsProcessingFramework1972")) %>%
  select(BIBTEXKEY,
         DATE,
         TITLE,
         NOTE) %>%
  rowwise() %>%
  mutate(BIBTEXKEY = paste("[@",BIBTEXKEY,"]",sep="",collapse=""),
         DATE = as.numeric(DATE),
         TITLE = stringr::str_remove_all(TITLE,"[{}]"),
         NOTE = case_when(is.na(NOTE) == TRUE ~ "",
                          is.na(NOTE) == FALSE ~ NOTE)
         ) %>%
  rename(CITATION = BIBTEXKEY)

knitr::kable(selected_bib)
```

I could live with a table like this I think.

## More thoughts

I'm getting stuck too much worrying about ways to present a list of suggested readings. It feels sticky because I'm thinking about how content and style come together, but I haven't totally sorted out what content options I want.

Minimally, I think I want the citation and the option to add notes about the reading. This is pretty much what I have in the above table. I can write any notes about a paper in zotero and have them included in the .bib file. This way the .bib file acts as a little database, which also offers opportunities for search and presentation. For example, the above table adds a date column read from the bib file.

## Trying to get interactive tables that process markdown citations

Which, reminds me, I need to double-check if I can make the date column sortable. This should be possible with:

```{r}
DT::datatable(selected_bib)
```

That works, but it doesn't render the citations. I feel like I have been here before with the [Semantic librarian project](https://www.semanticlibrarian.com).

Sigh, looks like this is an open issue: <https://github.com/rstudio/DT/issues/748>.

Ok, let's try <https://glin.github.io/reactable/>.

```{r}
#reactable::reactable(selected_bib)
```

This doesn't render the citations either. But, is there hope? Perhaps custom-rendering: <https://glin.github.io/reactable/articles/custom-rendering.html>. Tried some stuff, didn't work.

### Try stuff

None of thie stuff I tried here worked, deleting it. I'm also reminding myself that the .pdf version of the book chapters won't be able to have interactive tables. So, I'm pausing this tangent.

## Minimal Example

The goal for this example is to pick 10-20 readings from cognitive psychology that could appear in the [first chapter](https://crumplab.com/cognition/textbook/C1_What_is_Cognition.html), and then print the table here. I'm going to pick some papers that could be interesting for this chapter, and then print the table here to a sense of look and feel. Heads over to zotero to make another folder within a folder.

OK, I slammed together 13 papers. I can export them easily as a .bib file, load them in and print them as a table sorted by date. I'm less certain about how to add additional citation data to each entry, such as a note field. Let's see.

I rarely use the notes feature in Zotero, so I just discovered that if I write notes for an entry, then I can export them as part of the bib file, and they appear as a note entry. That's convenient. I could imagine having really long notes for the some of the paper, and that wouldn't fit space-wise in the table very well. Could have notes as tooltips, or make the table scroll. Will come to that later. Let's add some notes and print out the table.

I added some notes, some longer, some shorter. Curious to see what the table looks like.

```{r}
#| messages: FALSE
#| warning: FALSE
load_bib <- bib2df::bib2df(file="C1_Cognition_reading.bib")

selected_bib <- load_bib %>%
  select(BIBTEXKEY,
         DATE,
         TITLE,
         NOTE) %>%
  rowwise() %>%
  mutate(BIBTEXKEY = paste("[@",BIBTEXKEY,"]",sep="",collapse=""),
         DATE = as.numeric(DATE),
         TITLE = stringr::str_remove_all(TITLE,"[{}]"),
         NOTE = case_when(is.na(NOTE) == TRUE ~ "",
                          is.na(NOTE) == FALSE ~ NOTE)
         ) %>%
  rename(CITATION = BIBTEXKEY) %>%
  arrange(desc(DATE))

knitr::kable(selected_bib)
```

Not bad, pushing ball forward achieved.

## References
