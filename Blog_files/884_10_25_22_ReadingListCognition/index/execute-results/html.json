{
  "hash": "dbc0d9347ce18a28cc09869ef6c6e81a",
  "result": {
    "markdown": "---\ntitle: \"A reading list for cognition\"\ndescription: \"Developing a reading list for cognitive psychology to supplement an introductory textbook.\"\nauthor: \"Matt Crump\"\ndate: '2022-10-25'\ndate-modified: last-modified\nimage: 'images/cognition_reading.jpg'\nopengraph:\n  twitter:\n    card: summary_large_image\n    creator: \"@MattCrumpLab\"\n    site: \"@MattCrumpLab\"\nbibliography: [memory_timeline.bib,C1_Cognition_reading.bib]\ncategories:\n  - cognition\n  - teaching\n  - reading list\nexecute:\n  eval: false\ndraft: true\n---\n\n::: {.cell}\n\n:::\n\n\nOne of my ongoing projects is an [open-educational resource for a survey course in cognitive psychology](https://crumplab.com/cognition). The project currently includes a textbook, course website, slides, and assignment suggestions under a creative commons license (CC-BY-SA 4.0). The textbook has nine chapters, and at some point I plan to add a few more. As it stands, when I teach this course, we transition from textbook readings toward reading primary research articles. To supplement and encourage more reading of primary research, I'm considering adding a suggested reading list section to the textbook. The purpose of this blog post is to draft some reading lists, and think about how I would curate and present them.\n\nI think I have two general problems to solve:\n\n1.  Picking articles to go on the list (and considering why these/not those).\n2.  Maintaining and publishing the list with preferred software tools, like zotero and quarto.\n\nIdeally, I think I want a zotero folder with sub-folders for different topics in cognition, each full of recommended papers to read. I already use zotero, and it can generate .bib files for each folder, which I can pipe into quarto and print out somewhere. There's wrinkles though.\n\nLet me count the ways. Let's say I have 10-25 recommended articles per chapter. I could put them all in a single .bib file, and then use \\[nocite\\](https://quarto.org/docs/authoring/footnotes-and-citations.html#including-uncited-items) to print them all to a reference list at the end of a chapter. This will be a long undifferentiated reference list in alphabetical order. I could probably sort it differently with CSL.\n\nI remembered that I already started an \"additional reading\" section in the Eugenics and Psychology chapter. I don't like how it is presently formatted on the page, but I do like that it appears as a section in the chapter. Hmmm.\n\nRevisiting that chapter I see that I tried two things. First, I wrote a code chunk to automatically generate a reading list from selected .bib entries in a .bib file. But, I guess I didn't like how that worked out, because I ended up typing out the references directly.\n\nHere's a version of the code chunk:\n\n\n::: {.cell messages='false'}\n\n```{.r .cell-code}\nlibrary(dplyr)\nload_bib <- bib2df::bib2df(file=\"memory_timeline.bib\")\n\nselected_bib <- load_bib %>%\n  filter(BIBTEXKEY %in% c(\n    \"atkinsonHumanMemoryProposed1968\",\n    \"baddeleyWorkingMemory1974\",\n    \"craikLevelsProcessingFramework1972\"))\n\nbib2df::df2bib(selected_bib,file = \"temp.bib\")\n\nstevemisc::print_refs(\"temp.bib\",csl=\"apa-annotated-bibliography.csl\")\n```\n:::\n\n\nThis is OK. What are some other options.\n\n## Cite the refs in text.\n\nI guess the simplest option is to cite the references in text the normal way.\n\n### Additional Reading\n\n[@eichCompositeHolographicAssociative1982; @hintzmanJudgmentsFrequencyRecognition1988; @hintzmanMINERVASimulationModel1984a; @hintzmanSchemaAbstractionMultipleTrace1986; @jacobyNonanalyticCognitionMemory1984; @jacobyProcessDissociationFramework1991; @jamiesonInstanceTheorySemantic2018; @kolersProceduresMind1984; @macleodZeigarnikRestorffMemory2020; @mcclellandDistributedMemoryRepresentation1985; @murdockTheoryStorageRetrieval1982; @roedigerCreatingFalseMemories1995; @roedigeriiiTestenhancedLearningTaking2006; @shiffrinModelRecognitionMemory1997; @vossLongtermAssociativeMemory2009; @whittleseaProductionEvaluationPreservation1997].\n\nThis option isn't great. It's nice that quarto shows the full citation on hover, but in this case it shows a really long list because they are cited together within \\[\\].\n\n## Additional Reading #2\n\n@eichCompositeHolographicAssociative1982\n\n@hintzmanJudgmentsFrequencyRecognition1988\n\n@hintzmanMINERVASimulationModel1984a\n\n@hintzmanSchemaAbstractionMultipleTrace1986\n\n@jacobyNonanalyticCognitionMemory1984\n\nCan't say I really love this look and feel either. Maybe a table or something would be better?\n\n## Additional Reading #3\n\n| Citation                                   | Year | Notes          |\n|--------------------------------------------|------|----------------|\n| @eichCompositeHolographicAssociative1982   | 1982 | blah blah blah |\n| @hintzmanJudgmentsFrequencyRecognition1988 | 1988 | blah blah      |\n| @shiffrinModelRecognitionMemory1997        | 1997 | blah blah      |\n\nThis isn't terrible. Could I make my life easier with `knitr::kable`?\n\n## Additional Reading #4\n\n\n::: {.cell messages='false'}\n\n```{.r .cell-code}\nlibrary(dplyr)\nload_bib <- bib2df::bib2df(file=\"memory_timeline.bib\")\n\nselected_bib <- load_bib %>%\n  filter(BIBTEXKEY %in% c(\n    \"atkinsonHumanMemoryProposed1968\",\n    \"baddeleyWorkingMemory1974\",\n    \"craikLevelsProcessingFramework1972\")) %>%\n  select(BIBTEXKEY,\n         DATE,\n         TITLE,\n         NOTE) %>%\n  rowwise() %>%\n  mutate(BIBTEXKEY = paste(\"[@\",BIBTEXKEY,\"]\",sep=\"\",collapse=\"\"),\n         DATE = as.numeric(DATE),\n         TITLE = stringr::str_remove_all(TITLE,\"[{}]\"),\n         NOTE = case_when(is.na(NOTE) == TRUE ~ \"\",\n                          is.na(NOTE) == FALSE ~ NOTE)\n         ) %>%\n  rename(CITATION = BIBTEXKEY)\n\nknitr::kable(selected_bib)\n```\n:::\n\n\nI could live with a table like this I think.\n\n## More thoughts\n\nI'm getting stuck too much worrying about ways to present a list of suggested readings. It feels sticky because I'm thinking about how content and style come together, but I haven't totally sorted out what content options I want.\n\nMinimally, I think I want the citation and the option to add notes about the reading. This is pretty much what I have in the above table. I can write any notes about a paper in zotero and have them included in the .bib file. This way the .bib file acts as a little database, which also offers opportunities for search and presentation. For example, the above table adds a date column read from the bib file.\n\n## Trying to get interactive tables that process markdown citations\n\nWhich, reminds me, I need to double-check if I can make the date column sortable. This should be possible with:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDT::datatable(selected_bib)\n```\n:::\n\n\nThat works, but it doesn't render the citations. I feel like I have been here before with the [Semantic librarian project](https://www.semanticlibrarian.com).\n\nSigh, looks like this is an open issue: <https://github.com/rstudio/DT/issues/748>.\n\nOk, let's try <https://glin.github.io/reactable/>.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#reactable::reactable(selected_bib)\n```\n:::\n\n\nThis doesn't render the citations either. But, is there hope? Perhaps custom-rendering: <https://glin.github.io/reactable/articles/custom-rendering.html>. Tried some stuff, didn't work.\n\n### Try stuff\n\nNone of thie stuff I tried here worked, deleting it. I'm also reminding myself that the .pdf version of the book chapters won't be able to have interactive tables. So, I'm pausing this tangent.\n\n## Minimal Example\n\nThe goal for this example is to pick 10-20 readings from cognitive psychology that could appear in the [first chapter](https://crumplab.com/cognition/textbook/C1_What_is_Cognition.html), and then print the table here. I'm going to pick some papers that could be interesting for this chapter, and then print the table here to a sense of look and feel. Heads over to zotero to make another folder within a folder.\n\nOK, I slammed together 13 papers. I can export them easily as a .bib file, load them in and print them as a table sorted by date. I'm less certain about how to add additional citation data to each entry, such as a note field. Let's see.\n\nI rarely use the notes feature in Zotero, so I just discovered that if I write notes for an entry, then I can export them as part of the bib file, and they appear as a note entry. That's convenient. I could imagine having really long notes for the some of the paper, and that wouldn't fit space-wise in the table very well. Could have notes as tooltips, or make the table scroll. Will come to that later. Let's add some notes and print out the table.\n\nI added some notes, some longer, some shorter. Curious to see what the table looks like.\n\n\n::: {.cell messages='false'}\n\n```{.r .cell-code}\nload_bib <- bib2df::bib2df(file=\"C1_Cognition_reading.bib\")\n\nselected_bib <- load_bib %>%\n  select(BIBTEXKEY,\n         DATE,\n         TITLE,\n         NOTE) %>%\n  rowwise() %>%\n  mutate(BIBTEXKEY = paste(\"[@\",BIBTEXKEY,\"]\",sep=\"\",collapse=\"\"),\n         DATE = as.numeric(DATE),\n         TITLE = stringr::str_remove_all(TITLE,\"[{}]\"),\n         NOTE = case_when(is.na(NOTE) == TRUE ~ \"\",\n                          is.na(NOTE) == FALSE ~ NOTE)\n         ) %>%\n  rename(CITATION = BIBTEXKEY) %>%\n  arrange(desc(DATE))\n\nknitr::kable(selected_bib)\n```\n:::\n\n\nNot bad, pushing ball forward achieved.\n\n## References\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}