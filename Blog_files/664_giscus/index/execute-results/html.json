{
  "hash": "75753d19f0e964609b0ad33f22394c00",
  "result": {
    "markdown": "---\nauthor: \"Matt Crump\"\ntitle: \"Adding a giscus comment section?\"\npagetitle: \"Adding a giscus comment section?\"\ndescription: \"Testing out adding a giscus comment section to a blog post.\"\nimage: \"cover.jpg\"\ndate: \"6-26-2023\"\ncategories: \n  - Blogging\n  - giscus\ncomments:\n  giscus: \n    repo: CrumpLab/crumplab_comments\nexecute:\n  echo: false\n---\n\n::: {.cell}\n::: {.cell-output-display}\n![](cover.jpg){width=540}\n:::\n:::\n\n\nOn the one hand, I am using this post to try out giscus comments. On the other hand, I'm not sure I want to enable comments at all. Despite my hands, I'm trying it anyway.\n\nI'm also new to [github discussions](https://docs.github.com/en/discussions/quickstart), which seems pretty useful. Apparently, I need to enable this for a repo, and it becomes possible to use giscus on a quarto web page like this one. I'll be following the quarto documentation on using giscus here: <https://quarto.org/docs/output-formats/html-basics.html#commenting>.\n\nAchievement unlocked!\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](discussions.png){width=1275}\n:::\n:::\n\n\nThen I need to add some bits to the yaml of this post...then install giscus...hmmm, this part... I can feel time slowing down.\n\n<https://github.com/giscus/giscus>\n\nAfter more googling and scanning blog posts about doing this, it appears the repo with discussions enabled for the comments could be any public repo. I like this approach better.\n\n\\[x\\] - made a new repo crumplab_comments\n\n\\[x\\] - installed giscus app\n\nThis was my first time installing a github app. Took half a sec to figure out where the instructions were... the link's in the readme under giscus app:\n\n<https://github.com/apps/giscus>\n\nThere are configuration options, but it might work without them. I should try to render this page and see what happens. Seems to work...very nice.\n\n## Testing...\n\nI'm going to push this post online, then see if I can add a comment. Then I'm going to add the giscus comment option to a different post and add a comment there. I'm hoping this will be a very smooth way to have comments on some posts and not others.\n\nIf all goes well I'll come back here and recap the steps, which turned out to be easier than I thought they would be ðŸ¤ž.\n\nWell, I'm impressed. It was a snap to add comments to another post. The comments show up as different threads in the discussion section of the repo I made just for the comments:\n\n![](images/Screenshot%202023-06-26%20at%209.58.50%20AM.png)\n\nI think I'm getting email alerts from the giscus bot and I'll need to quash that. Otherwise, seems like a decent option that I may use once in a while.\n\n## Recap of steps\n\nThese are the steps I took to add giscus comments to the bottom of my blog posts. I'm publishing this blog using quarto.\n\n1.  Create a new public repository\n    -   The giscus app will need permissions to write to the repo. I figured it would be safer to have a repo dedicated to comments, rather than enable discussions and write permissions to the main repo for my whole lab website\n2.  Enable discussions for the repo.\n3.  Install the giscus app for the repo\n    -   <https://github.com/apps/giscus>\n4.  Add the following yaml to individual posts where you want to enable giscus comments:\n\n``` yaml\ncomments:\n  giscus: \n    repo: gituser/gitrepo\n```\n\n5.  See more options from the [quarto documentation](https://quarto.org/docs/output-formats/html-basics.html#commenting)\n\nThat's it.\n\n------------------------------------------------------------------------\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}